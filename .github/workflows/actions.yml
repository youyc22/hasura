name: actions

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Run
        shell: bash
        run: docker compose up -d

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Test apply
        run: |
          yarn hasura migrate apply --endpoint http://localhost:23333
          yarn hasura metadata apply --endpoint http://localhost:23333

  deploy:
    if: |
      github.event_name == 'push' &&
      github.ref_name == 'master' &&
      github.repository_owner == 'eesast'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{steps.yarn-cache-dir-path.outputs.dir}}
          key: ${{runner.os}}-yarn-${{hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{runner.os}}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Apply changes
        run: |
          yarn hasura migrate apply --endpoint ${{secrets.HASURA_GRAPHQL_ENDPOINT}} --admin-secret ${{secrets.HASURA_GRAPHQL_ADMIN_SECRET}}
          yarn hasura metadata apply --endpoint ${{secrets.HASURA_GRAPHQL_ENDPOINT}} --admin-secret ${{secrets.HASURA_GRAPHQL_ADMIN_SECRET}}
